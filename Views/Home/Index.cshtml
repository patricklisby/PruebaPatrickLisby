@{
    ViewData["Title"] = "Home";
}

<div class="container mx-auto px-4">
    <div class="flex justify-between items-center mt-8 mb-4">
        <h1 class="text-3xl font-bold text-gray-800">Productos</h1>
        <button id="btnCrearProducto" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">
            Crear Producto
        </button>
    </div>

    <div id="productosContainer" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        <!-- Los productos se renderizan dinámicamente aquí -->
    </div>
</div>

<!-- Modal para vistas parciales -->
<div id="modalContainer" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden flex items-center justify-center">
    <div class="bg-white p-8 rounded-lg shadow-lg max-w-3xl w-full relative">
        <button id="closeModal" class="absolute top-2 right-2 text-gray-500 hover:text-gray-800">
            &times;
        </button>
        <div id="modalContent">
            <!-- Contenido dinámico de vistas parciales -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = '/api/Producto';
        const productosContainer = document.getElementById("productosContainer");
        const modalContainer = document.getElementById("modalContainer");
        const modalContent = document.getElementById("modalContent");

        // Cargar productos
        async function cargarProductos() {
            try {
                const response = await fetch(`${apiBaseUrl}/obtenerProductos`);
                if (!response.ok) {
                    throw new Error("Error al cargar los productos.");
                }

                const productos = await response.json();
                productosContainer.innerHTML = ''; // Limpiar contenedor

                if (productos.length === 0) {
                    productosContainer.innerHTML = '<p class="text-gray-500">No hay productos disponibles.</p>';
                    return;
                }

                productos.forEach(producto => {
                    const productoCard = crearProductoCard(producto);
                    productosContainer.appendChild(productoCard);
                });
            } catch (error) {
                console.error(error);
            }
        }

        function crearProductoCard(producto) {
            const card = document.createElement("div");
            card.className = "bg-white rounded-lg shadow-md overflow-hidden flex flex-col justify-between";

            const imagenUrl = producto.ImagenUrl || "/imagenes/default.png";

            card.innerHTML = `
                <!-- Imagen con una proporción más adecuada -->
                <div class="aspect-w-3 aspect-h-4 bg-gray-200">
                            <img src="${producto.imagenUrl}" alt="${producto.descripcionProducto}" class="object-cover w-full h-full" onerror="this.onerror=null;this.src='/imagenes/default.png';">
                </div>
                <div class="p-4 flex-grow flex flex-col justify-between">
                    <div>
                        <h2 class="text-lg font-bold text-gray-800 truncate">${producto.descripcionProducto}</h2>
                        <p class="text-sm text-gray-600">${producto.detallesProducto}</p>
                        <p class="text-gray-800 font-bold mt-2">Precio: ₡${producto.precioProducto.toFixed(2)}</p>
                    </div>
                    <div class="mt-4">
                        <button data-id="${producto.idProducto}" class="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-900 w-full">
                            Editar
                        </button>
                    </div>
                </div>
            `;

            return card;
        }


        // Abrir modal
        function abrirModal(content) {
            modalContent.innerHTML = content;
            modalContainer.classList.remove("hidden");
        }

        // Cerrar modal
        document.getElementById("closeModal").addEventListener("click", () => {
            modalContainer.classList.add("hidden");
        });

        // Cargar vista de crear producto
        async function cargarVistaCrear() {
            const form = `
                        <h2 class="text-lg font-bold mb-4">Crear Producto</h2>
                        <form id="crearProductoForm">
                            <div class="mb-4">
                                <label class="block text-sm font-medium text-gray-700">Descripción</label>
                                <input type="text" id="descripcionProducto" class="w-full border-gray-300 rounded-md shadow-sm">
                            </div>
                            <div class="mb-4">
                                <label class="block text-sm font-medium text-gray-700">Detalles</label>
                                <textarea id="detallesProducto" class="w-full border-gray-300 rounded-md shadow-sm"></textarea>
                            </div>
                            <div class="mb-4">
                                <label class="block text-sm font-medium text-gray-700">Precio</label>
                                <input type="number" id="precioProducto" class="w-full border-gray-300 rounded-md shadow-sm">
                            </div>
                            <div class="mb-4">
                                <label class="block text-sm font-medium text-gray-700">Cantidad</label>
                                <input type="number" id="cantidadProducto" class="w-full border-gray-300 rounded-md shadow-sm">
                            </div>
                            <button type="submit" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Guardar</button>
                        </form>
                    `;

            abrirModal(form);

            document.getElementById("crearProductoForm").addEventListener("submit", async (e) => {
                e.preventDefault();
                const producto = {
                    descripcionProducto: document.getElementById("descripcionProducto").value,
                    detallesProducto: document.getElementById("detallesProducto").value,
                    precioProducto: parseFloat(document.getElementById("precioProducto").value),
                    cantidadProducto: parseInt(document.getElementById("cantidadProducto").value),
                };

                try {
                    const response = await fetch(`${apiBaseUrl}/crearProducto`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(producto),
                    });

                    if (response.ok) {
                        alert("Producto creado exitosamente.");
                        modalContainer.classList.add("hidden");
                        cargarProductos();
                    } else {
                        throw new Error("Error al crear el producto.");
                    }
                } catch (error) {
                    console.error(error);
                }
            });
        }

        // Cargar vista de editar producto
        async function cargarVistaEditar(idProducto) {
            try {
                const response = await fetch(`${apiBaseUrl}/obtenerProductoId/${idProducto}`);
                if (!response.ok) {
                    throw new Error("Error al obtener el producto.");
                }

                const producto = await response.json();

                const form = `
                            <h2 class="text-lg font-bold mb-4">Editar Producto</h2>
                            <form id="editarProductoForm">
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Descripción</label>
                                    <input type="text" id="descripcionProducto" class="w-full border-gray-300 rounded-md shadow-sm" value="${producto.descripcionProducto}">
                                </div>
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Detalles</label>
                                    <textarea id="detallesProducto" class="w-full border-gray-300 rounded-md shadow-sm">${producto.detallesProducto}</textarea>
                                </div>
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Precio</label>
                                    <input type="number" id="precioProducto" class="w-full border-gray-300 rounded-md shadow-sm" value="${producto.precioProducto}">
                                </div>
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Cantidad</label>
                                    <input type="number" id="cantidadProducto" class="w-full border-gray-300 rounded-md shadow-sm" value="${producto.cantidadProducto}">
                                </div>
                                <button type="submit" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Guardar</button>
                            </form>
                        `;

                abrirModal(form);

                document.getElementById("editarProductoForm").addEventListener("submit", async (e) => {
                    e.preventDefault();

                    const productoEditado = {
                        descripcionProducto: document.getElementById("descripcionProducto").value,
                        detallesProducto: document.getElementById("detallesProducto").value,
                        precioProducto: parseFloat(document.getElementById("precioProducto").value),
                        cantidadProducto: parseInt(document.getElementById("cantidadProducto").value),
                    };

                    try {
                        const response = await fetch(`${apiBaseUrl}/editarProducto/${idProducto}`, {
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(productoEditado),
                        });

                        if (response.ok) {
                            alert("Producto editado exitosamente.");
                            modalContainer.classList.add("hidden");
                            cargarProductos();
                        } else {
                            throw new Error("Error al editar el producto.");
                        }
                    } catch (error) {
                        console.error(error);
                    }
                });
            } catch (error) {
                console.error(error);
            }
        }

        // Inicializar
        document.getElementById("btnCrearProducto").addEventListener("click", cargarVistaCrear);
        cargarProductos();
    </script>
}
